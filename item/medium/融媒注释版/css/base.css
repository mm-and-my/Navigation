*{
	margin: 0;
	padding: 0;
	
}

html,body {
	height: 100%;
	width: 100%;
}

@media screen and (min-width:751px) {
	.container{
		position: relative;
		/*内容溢出容器时内容会被修剪，并且其余内容是不可见的*/
		overflow: hidden;
		width: 750px;
		height: 100%;
	}
}

@media screen and (max-width:751px) {
	.container{
		position: relative;
		overflow: hidden;
		width: 100%;
		height: 100%;
	}
}
/* 默认布局 */
.default {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	/* 弹性盒子布局 */
	display: flex;
	justify-content: center;
	align-items: center;
}

/*animation : 
动画名  animation-name
动画指定需要多少秒或毫秒完成  animation-duration
动画将如何完成一个周期  animation-timing-function
动画在启动前的延迟间隔  animation-delay
定义动画的播放次数 animation-iteration-count
指定是否应该轮流反向播放动画  animation-direction
规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。animation-fill-mode
指定动画是否正在运行或已暂停animation-play-state */

/*animation-timing-function属性
linear	动画从头到尾的速度是相同的。
ease	默认。动画以低速开始，然后加快，在结束前变慢。
ease-in	动画以低速开始。
ease-out	动画以低速结束。
ease-in-out	动画以低速开始和结束。*/

/*animation-iteration-count属性
n:次数
infinite	指定动画应该播放无限次（永远）*/

/*animation-direction属性
normal	默认值。动画按正常播放。
reverse	动画反向播放。
alternate	动画在奇数次（1、3、5...）正向播放，在偶数次（2、4、6...）反向播放
alternate-reverse	动画在奇数次（1、3、5...）反向播放，在偶数次（2、4、6...）正向播放。*/

/*animation-fill-mode
JavaScript 语法：	object.style.animationFillMode="forwards"
none	默认值。动画在动画执行之前和之后不会应用任何样式到目标元素。
forwards	在动画结束后（由 animation-iteration-count 决定），动画将应用该属性值。
backwards	动画将应用在 animation-delay 定义期间启动动画的第一次迭代的关键帧中定义的属性值。这些都是 from 关键帧中的值（当 animation-direction 为 "normal" 或 "alternate" 时）或 to 关键帧中的值（当 animation-direction 为 "reverse" 或 "alternate-reverse" 时）。
both	动画遵循 forwards 和 backwards 的规则。也就是说，动画会在两个方向上扩展动画属性。
*/

/*animation-play-state语法
JavaScript 语法:object object.style.animationPlayState="paused"
paused	指定暂停动画
running	指定正在运行的动画*/

/* 烟花 */
.yanhua {
	position: absolute;
	width: 10vw;
	animation: yanhua_scale 3s linear 0s infinite normal forwards;
}
/* 爆竹 */
.baozhu{
	position: absolute;	
	width: 10vw;
	animation: baozhu_scale 3s linear 0s infinite normal forwards;
	/* 名称 持续时间 播放速度 延迟播放时间 播放次数 播放模式 属性值 */
}
/* 当前页的显示属性 */
.show {
	/* visibility属性指定一个元素是否是可见的 */
	/* visible	默认值。元素是可见的。
	hidden	元素是不可见的。
	collapse	当在表格元素中使用时，此值可删除一行或一列，但是它不会影响表格的布局。被行或列占据的空间会留给其他内容使用。如果此值被用在其他的元素上，会呈现为 "hidden"。
	inherit	规定应该从父元素继承 visibility 属性的值。 */
	
	/* visibility: visible;; */
	/*透明度*/
	opacity: 1;
	/*transition 属性设置元素当过渡效果*/
	transition: all 2s linear; 
}
/*transition-property指定CSS属性的name，transition效果
none	没有属性会获得过渡效果。
all	所有属性都将获得过渡效果。*/

/*transition-duration	transition效果需要指定多少秒或毫秒才能完成*/
/*transition-timing-function	指定transition效果的转速曲线
linear	规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。
ease	规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。
ease-in	规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。
ease-out	规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。
ease-in-out	规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。*/

/* 不显示页面的hident隐藏属性 */
body .hident {
	/* visibility: hidden; */
	opacity: 0;
	transition: all 2s linear;
	z-index: -1;
}

button {
	border: none;
	/* outline（轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用 */
	outline: none;
	/*背景透明*/
	background-color: transparent;
	
}

#yinle {
	position: absolute;
	width: 10vw;
	height: 10vw;
	z-index: 99;
	right: 4vw;
	top:4vw;
	background-image: url(../img/yinle.png);
	background-size: 100% 100%;
	animation: yinlue_rotate 3s linear 0s infinite normal forwards;
	/*animation--play-state属性指定动画是否正在运行或已暂停。*/
	/*暂停*/
	animation-play-state: paused;
	/*播放*/
	/* animation-play-state: running; */
	
}